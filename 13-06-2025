#.You are given a 0-indexed integer array nums and an integer p. Find p pairs of indices of nums such that the maximum difference amongst all the pairs is minimized. Also, ensure no index appears more than once amongst the p pairs.
Note that for a pair of elements at the index i and j, the difference of this pair is |nums[i] - nums[j]|, where |x| represents the absolute value of x.
Return the minimum maximum difference among all p pairs. We define the maximum of an empty set to be zero.

import java.util.*;

class Solution {
    public int minimizeMax(int[] v, int p) {
        Arrays.sort(v); // Sort to ensure smallest differences come first
        int n = v.length;
        int lo = -1, hi = (int)1e9 + 7;

        while (lo < hi - 1) {
            int mid = lo + (hi - lo) / 2;
            int count = 0;

            for (int i = 1; i < n; i++) {
                if (v[i] - v[i - 1] <= mid) {
                    count++;
                    i++; // Skip next to ensure non-overlapping
                }
            }

            if (count >= p) {
                hi = mid;
            } else {
                lo = mid;
            }
        }

        return hi;
    }
}
